{"version":3,"sources":["components/mainMenu/MainMenu.module.scss","API/api.tsx","redux/people-reducer.tsx","components/people/PeoplesComponent.tsx","components/people/People.tsx","components/mainMenu/MainMenu.tsx","redux/films-reducer.tsx","components/films/FilmsComponent.tsx","components/films/Films.tsx","components/starships/StarshipsComponent.tsx","redux/starships-reducer.tsx","components/starships/Starships.tsx","components/vehicles/VehiclesComponent.tsx","redux/vehicles-reducer.tsx","components/vehicles/Vehicles.tsx","components/species/SpeciesComponent.tsx","redux/species-reducer.tsx","components/species/Species.tsx","redux/planets-reducer.tsx","components/planets/PlanetsComponent.tsx","components/planets/Planets.tsx","App.tsx","serviceWorker.js","redux/redux-store.tsx","index.tsx","components/people/People.module.scss","components/films/Films.module.scss","components/starships/Starships.module.scss","components/vehicles/Vehicle.module.scss","components/species/Species.module.scss","components/planets/Planets.module.scss","App.module.scss"],"names":["module","exports","instance","axios","create","baseURL","peopleApi","peopleName","get","peopleId","filmsApi","titleFilms","filmsId","starshipsApi","starshipsName","starshipsId","vehiclesApi","vehiclesName","vehiclesId","speciesApi","speciesName","speciesId","planetsApi","planetsName","planetsId","initialState","searchResult","specificResult","action","searchPeople","type","specificPeople","peopleReducer","state","PeopleComponent","peoplesSelect","name","height","mass","hair_color","skin_color","eye_color","birth_year","gender","homeworld","films","species","vehicles","starships","created","edited","url","People","useState","setPeopleName","peoples","setPeoples","setPeoplesSelect","dispatch","useDispatch","useSelector","peoplePage","Option","Select","useEffect","a","data","results","requestSearchPeople","onSearchPeople","debounce","value","className","styles","wrapper","wrapperContent","backButton","showSearch","style","width","placeholder","optionFilterProp","onSearch","onSelect","Number","match","requestSpecificPeople","map","hero","key","to","specifications","PeoplesComponent","MainMenu","pathname","useLocation","isMenu","setIsMenu","cn","smallWrapper","hideWrapper","buttonMainMenu","buttonSmallMenu","onClick","MenuOutlined","peopleFilmsStarships","smallPeopleFilmsStarships","lineHighlight","vehiclesSpeciesPlanets","smallVehiclesSpeciesPlanets","searchFilms","specificFilms","filmsReducer","FilmsComponent","filmsSelect","characters","director","episode_id","planets","producer","release_date","title","Films","setTitleFilms","setFilms","setFilmsSelect","filmsPage","requestSearchFilms","onSearchFilms","requestSpecificFilms","StarshipsComponent","starshipsSelect","MGLT","cargo_capacity","consumables","cost_in_credits","crew","hyperdrive_rating","length","manufacturer","max_atmosphering_speed","model","passengers","pilots","starship_class","searchStarships","specificStarships","starshipsReducer","Starships","setStarshipsName","setStarships","setStarshipsSelectSelect","starshipsPage","requestSearchStarships","VehiclesComponent","vehiclesSelect","vehicle_class","searchVehicles","specificVehicles","vehiclesReducer","Vehicles","setVehiclesName","setVehicles","setVehiclesSelect","vehiclesPage","requestSearchVehicles","requestSpecificVehicles","SpeciesComponent","speciesSelect","average_height","average_lifespan","classification","designation","eye_colors","hair_colors","language","people","skin_colors","searchSpecies","specificSpecies","speciesReducer","Species","setSpeciesName","setSpecies","setSpeciesSelect","speciesPage","requestSearchSpecies","requestSpecificSpecies","searchPlanets","specificPlanets","planetsReducer","PlanetsComponent","planetsSelect","climate","diameter","gravity","orbital_period","population","residents","rotation_period","surface_water","terrain","Planets","setPlanetsName","setPlanets","setPlanetsSelect","planetsPage","requestSearchPlanets","requestSpecificPlanets","App","exact","path","render","notFound","Boolean","window","location","hostname","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2a916c96.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MainMenu_wrapper__hjNfZ\",\"smallWrapper\":\"MainMenu_smallWrapper__2V8V5\",\"hideWrapper\":\"MainMenu_hideWrapper__100o1\",\"peopleFilmsStarships\":\"MainMenu_peopleFilmsStarships__nRgzT\",\"smallPeopleFilmsStarships\":\"MainMenu_smallPeopleFilmsStarships__305kU\",\"vehiclesSpeciesPlanets\":\"MainMenu_vehiclesSpeciesPlanets__26mSC\",\"smallVehiclesSpeciesPlanets\":\"MainMenu_smallVehiclesSpeciesPlanets__3PZj7\",\"lineHighlight\":\"MainMenu_lineHighlight__2TXKf\",\"buttonSmallMenu\":\"MainMenu_buttonSmallMenu__38CB5\",\"buttonMainMenu\":\"MainMenu_buttonMainMenu__3ELrh\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://swapi.dev/api/'\r\n});\r\n\r\nexport const peopleApi = {\r\n    getSearchPeople(peopleName: string) {\r\n        return instance.get(`people/?search=${peopleName}`)\r\n    },\r\n\r\n    getSpecificPeople(peopleId: number) {\r\n        return instance.get(`people/${peopleId}`)\r\n    }\r\n};\r\n\r\nexport const filmsApi = {\r\n    getSearchFilms(titleFilms: string) {\r\n        return instance.get(`films/?search=${titleFilms}`)\r\n\r\n    },\r\n\r\n    getSpecificFilms(filmsId: number) {\r\n        return instance.get(`films/${filmsId}`)\r\n    }\r\n};\r\n\r\nexport const starshipsApi = {\r\n    getSearchStarships(starshipsName: string) {\r\n        return instance.get(`starships/?search=${starshipsName}`)\r\n    },\r\n\r\n    getSpecificStarships(starshipsId: number) {\r\n        return instance.get(`starships/${starshipsId}`)\r\n    }\r\n};\r\n\r\nexport const vehiclesApi = {\r\n    getSearchVehicles(vehiclesName: string) {\r\n        return instance.get(`vehicles/?search=${vehiclesName}`)\r\n    },\r\n\r\n    getSpecificVehicles(vehiclesId: number) {\r\n        return instance.get(`vehicles/${vehiclesId}`)\r\n    }\r\n};\r\n\r\nexport const speciesApi = {\r\n    getSearchSpecies(speciesName: string) {\r\n        return instance.get(`species/?search=${speciesName}`)\r\n    },\r\n\r\n    getSpecificSpecies(speciesId: number) {\r\n        return instance.get(`species/${speciesId}`)\r\n    }\r\n};\r\n\r\nexport const planetsApi = {\r\n    getSearchPlanets(planetsName: string) {\r\n        return instance.get(`planets/?search=${planetsName}`)\r\n    },\r\n\r\n    getSpecificPlanets(planetsId: number) {\r\n        return instance.get(`planets/${planetsId}`)\r\n    }\r\n};","import {peopleApi} from \"../API/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {InferActionTypes} from \"./redux-store\";\r\nimport {PeopleSearchType, PeopleSpecificType} from \"../Types/TypePeople\";\r\n\r\nconst SEARCH_PEOPLE = 'SEARCH_PEOPLE';\r\nconst SPECIFIC_RESULT = 'SPECIFIC_RESULT';\r\n\r\nlet initialState = {\r\n    searchResult: [] as Array<PeopleSearchType>,\r\n    specificResult: null as PeopleSpecificType | null\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionTypes = InferActionTypes<typeof action>;\r\n\r\nconst peopleReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case SEARCH_PEOPLE:\r\n            return {\r\n                ...state,\r\n                searchResult: action.searchPeople\r\n            };\r\n\r\n        case SPECIFIC_RESULT:\r\n            return {\r\n                ...state,\r\n                specificResult: action.specificPeople\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nconst action = {\r\n    searchPeople: (searchPeople: Array<PeopleSearchType>) => ({\r\n        type: SEARCH_PEOPLE,\r\n        searchPeople\r\n    } as const),\r\n\r\n    specificPeople: (specificPeople: PeopleSpecificType) => ({\r\n        type: SPECIFIC_RESULT, specificPeople\r\n    } as const)\r\n}\r\n\r\nexport const requestSearchPeople = (peopleName: string) => {\r\n    return async (dispatch: Dispatch) => {\r\n        const {data} = await peopleApi.getSearchPeople(peopleName);\r\n        dispatch(action.searchPeople(data.results));\r\n    }\r\n};\r\n\r\nexport const requestSpecificPeople = (peopleId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        const {data} = await peopleApi.getSpecificPeople(peopleId);\r\n        dispatch(action.specificPeople(data))\r\n    }\r\n};\r\n\r\nexport default peopleReducer;","import React from \"react\";\r\nimport {PeopleSpecificType} from \"../../Types/TypePeople\";\r\n\r\ntype PeoplesSelectProps = {\r\n        peoplesSelect: PeopleSpecificType | null\r\n}\r\n\r\nfunction PeopleComponent({peoplesSelect}: PeoplesSelectProps) {\r\n    return (\r\n        <div>\r\n            <div>Name: {peoplesSelect?.name}</div>\r\n            <div>Height: {peoplesSelect?.height}</div>\r\n            <div>Mass: {peoplesSelect?.mass}</div>\r\n            <div>Hair_color: {peoplesSelect?.hair_color}</div>\r\n            <div>Skin_color: {peoplesSelect?.skin_color}</div>\r\n            <div>Eye_color: {peoplesSelect?.eye_color}</div>\r\n            <div>Birth_year: {peoplesSelect?.birth_year}</div>\r\n            <div>Gender: {peoplesSelect?.gender}</div>\r\n            <div>homeWorld: {peoplesSelect?.homeworld}</div>\r\n            <div>Films: {peoplesSelect?.films}</div>\r\n            <div>Species: {peoplesSelect?.species}</div>\r\n            <div>Vehicles: {peoplesSelect?.vehicles}</div>\r\n            <div>Starships: {peoplesSelect?.starships}</div>\r\n            <div>Created: {peoplesSelect?.created}</div>\r\n            <div>Edited: {peoplesSelect?.edited}</div>\r\n            <div>URL: {peoplesSelect?.url}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PeopleComponent","import React, {useState, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {requestSearchPeople, requestSpecificPeople} from \"../../redux/people-reducer\";\r\nimport styles from \"./People.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Select, Button} from 'antd';\r\nimport {debounce} from 'lodash';\r\nimport PeoplesComponent from \"./PeoplesComponent\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {PeopleSearchType, PeopleSpecificType} from \"../../Types/TypePeople\";\r\n\r\nfunction People() {\r\n    const [peopleName, setPeopleName] = useState('');\r\n    const [peoples, setPeoples] = useState <Array<PeopleSearchType>>([]);\r\n    const [peoplesSelect, setPeoplesSelect] = useState<PeopleSpecificType | null>(null);\r\n    const dispatch = useDispatch();\r\n    const searchResult = useSelector<AppStateType, Array<PeopleSearchType>>(state => state.peoplePage.searchResult);\r\n    const specificResult = useSelector<AppStateType, PeopleSpecificType | null>(state => state.peoplePage.specificResult);\r\n    const {Option} = Select;\r\n\r\n    useEffect(() => {\r\n        setPeoples(searchResult);\r\n    }, [searchResult]);\r\n\r\n    useEffect(() => {\r\n        setPeoplesSelect(specificResult);\r\n    }, [specificResult]);\r\n\r\n    useEffect(() => {\r\n        dispatch(requestSearchPeople(peopleName));\r\n    }, [peopleName]);\r\n\r\n    const onSearchPeople = debounce((value) => {\r\n        setPeopleName(value);\r\n    }, 1000);\r\n\r\n    const getPeople = (value: string) => {\r\n        const peopleId = Number(value?.match(/\\d+/))\r\n        dispatch(requestSpecificPeople(peopleId))\r\n    }\r\n\r\n    return (\r\n        <nav className={styles.wrapper}>\r\n            <div className={styles.wrapperContent}>\r\n                <div className={styles.backButton}>\r\n                    <Select\r\n                        showSearch\r\n                        style={{width: 470}}\r\n                        placeholder=\"Select a person\"\r\n                        optionFilterProp=\"children\"\r\n                        onSearch={onSearchPeople}\r\n                        onSelect={getPeople}\r\n                    >\r\n                        {peoples?.map((hero: { url: string, name: string }) => {\r\n                            return (\r\n                                <Option key={hero.url} value={hero.url}>\r\n                                    {hero.name}\r\n                                </Option>\r\n                            )\r\n                        })}\r\n                    </Select>\r\n                    <NavLink to='/'>\r\n                        <Button>Back</Button>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={styles.specifications}>\r\n                    <PeoplesComponent peoplesSelect={peoplesSelect}/>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default People;","import React, {useState} from 'react';\r\nimport cn from 'classnames';\r\nimport styles from './MainMenu.module.scss'\r\nimport {NavLink, useLocation} from \"react-router-dom\";\r\nimport {Button} from \"antd\";\r\nimport {MenuOutlined} from \"@ant-design/icons\";\r\n\r\nfunction MainMenu() {\r\n    const {pathname} = useLocation();\r\n    const [isMenu, setIsMenu] = useState(false)\r\n\r\n    return (\r\n        <nav className={cn(pathname === '/' ? styles.wrapper :\r\n            (!isMenu ? styles.hideWrapper : styles.smallWrapper))}>\r\n            <Button className={cn(pathname === '/' ? styles.buttonMainMenu : styles.buttonSmallMenu)} type=\"primary\"\r\n                    onClick={() => setIsMenu(!isMenu)}>\r\n                <MenuOutlined/>\r\n            </Button>\r\n            <div\r\n                className={cn(pathname === '/' ? styles.peopleFilmsStarships : styles.smallPeopleFilmsStarships)}>\r\n                <NavLink className={styles.lineHighlight} to='/People'>People</NavLink>\r\n                <NavLink className={styles.lineHighlight} to='/Films'>Films</NavLink>\r\n                <NavLink className={styles.lineHighlight} to='/Starships'>Starships</NavLink>\r\n            </div>\r\n            <div\r\n                className={cn(pathname === '/' ? styles.vehiclesSpeciesPlanets : styles.smallVehiclesSpeciesPlanets)}>\r\n                <NavLink className={styles.lineHighlight} to='/Vehicles'>Vehicles</NavLink>\r\n                <NavLink className={styles.lineHighlight} to='/Species'>Species</NavLink>\r\n                <NavLink className={styles.lineHighlight} to='/Planets'>Planets</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default MainMenu;","import {filmsApi} from \"../API/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {InferActionTypes} from \"./redux-store\";\r\nimport {FilmsSearchType, FilmsSpecificType} from \"../Types/TypeFilms\";\r\n\r\nconst SEARCH_FILMS = 'SEARCH_FILMS';\r\nconst SPECIFIC_FILMS = 'SPECIFIC_FILMS';\r\n\r\nlet initialState = {\r\n    searchResult: [] as Array<FilmsSearchType>,\r\n    specificResult: null as FilmsSpecificType | null\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionTypes = InferActionTypes<typeof action>;\r\n\r\nconst filmsReducer = (state:InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case SEARCH_FILMS:\r\n            return {\r\n                ...state,\r\n                searchResult: action.searchFilms\r\n            };\r\n\r\n        case SPECIFIC_FILMS:\r\n            return {\r\n                ...state,\r\n                specificResult: action.specificFilms\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nconst action = {\r\n    searchFilms: (searchFilms: Array<FilmsSearchType>) => ({\r\n        type: SEARCH_FILMS, searchFilms\r\n    }as const),\r\n\r\n    specificFilms: (specificFilms: FilmsSpecificType) => ({\r\n        type: SPECIFIC_FILMS, specificFilms\r\n    }as const)\r\n}\r\n\r\nexport const requestSearchFilms = (titleFilms: string) => {\r\n    return async (dispatch: Dispatch) => {\r\n        let {data} = await filmsApi.getSearchFilms(titleFilms);\r\n        dispatch(action.searchFilms(data.results))\r\n    }\r\n};\r\n\r\nexport const requestSpecificFilms = (filmsId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        let {data} = await filmsApi.getSpecificFilms(filmsId);\r\n        dispatch(action.specificFilms(data))\r\n    }\r\n}\r\n\r\nexport default filmsReducer;","import React from \"react\";\r\nimport {FilmsSpecificType} from \"../../Types/TypeFilms\";\r\n\r\ntype FilmsSelectProps = {\r\n    filmsSelect: FilmsSpecificType | null\r\n}\r\n\r\nfunction FilmsComponent({filmsSelect}: FilmsSelectProps) {\r\n  return (\r\n    <div>\r\n      <div>characters: {filmsSelect?.characters}</div>\r\n      <div>created: {filmsSelect?.created}</div>\r\n      <div>director: {filmsSelect?.director}</div>\r\n      <div>edited: {filmsSelect?.edited}</div>\r\n      <div>episode_id: {filmsSelect?.episode_id}</div>\r\n      <div>planets: {filmsSelect?.planets}</div>\r\n      <div>producer: {filmsSelect?.producer}</div>\r\n      <div>release_date: {filmsSelect?.release_date}</div>\r\n      <div>species: {filmsSelect?.species}</div>\r\n      <div>starships: {filmsSelect?.starships}</div>\r\n      <div>title: {filmsSelect?.title}</div>\r\n      <div>URL: {filmsSelect?.url}</div>\r\n      <div>vehicles: {filmsSelect?.vehicles}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilmsComponent;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport styles from \"./Films.module.scss\";\r\nimport {requestSearchFilms, requestSpecificFilms} from \"../../redux/films-reducer\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Select, Button} from 'antd';\r\nimport FilmsComponent from \"./FilmsComponent\"\r\nimport {debounce} from \"lodash\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {FilmsSearchType, FilmsSpecificType} from \"../../Types/TypeFilms\";\r\n\r\nfunction Films() {\r\n    const [titleFilms, setTitleFilms] = useState(\"\");\r\n    const [Films, setFilms] = useState<Array<FilmsSearchType>>([]);\r\n    const [filmsSelect, setFilmsSelect] = useState<FilmsSpecificType | null>(null);\r\n    const dispatch = useDispatch();\r\n    const searchFilms = useSelector<AppStateType, Array<FilmsSearchType>>(state => state.filmsPage.searchResult);\r\n    const specificFilms = useSelector<AppStateType, FilmsSpecificType | null>(state => state.filmsPage.specificResult);\r\n    const {Option} = Select;\r\n\r\n    useEffect(() => {\r\n        setFilms(searchFilms);\r\n    }, [searchFilms]);\r\n\r\n    useEffect(() => {\r\n        setFilmsSelect(specificFilms);\r\n    }, [specificFilms]);\r\n\r\n    useEffect(() => {\r\n        dispatch(requestSearchFilms(titleFilms));\r\n    }, [titleFilms]);\r\n\r\n    const onSearchFilms = debounce((value) => {\r\n        setTitleFilms(value);\r\n    }, 1000);\r\n\r\n    const getFilms = (value: string) => {\r\n        const filmsId = Number(value?.match(/\\d+/))\r\n        dispatch(requestSpecificFilms(filmsId));\r\n    };\r\n\r\n    return (\r\n        <nav className={styles.wrapper}>\r\n            <div className={styles.wrapperContent}>\r\n                <div className={styles.backButton}>\r\n                    <Select\r\n                        showSearch\r\n                        style={{width: 470}}\r\n                        placeholder=\"Select a person\"\r\n                        optionFilterProp=\"children\"\r\n                        onSearch={onSearchFilms}\r\n                        onSelect={getFilms}\r\n                    >\r\n                        {Films?.map((films: {url: string, title: string}) => {\r\n                            return (\r\n                                <Option key={films.url} value={films.url}>\r\n                                    {films.title}\r\n                                </Option>\r\n                            );\r\n                        })}\r\n                    </Select>\r\n                    <NavLink to=\"/\">\r\n                        <Button>Back</Button>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={styles.specifications}>\r\n                    <FilmsComponent filmsSelect={filmsSelect}/>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Films;\r\n","import React from \"react\";\r\nimport { StarshipsSpecificType } from \"../../Types/TypeStarships\";\r\n\r\ntype StarshipsSelectProps = {\r\n        starshipsSelect: StarshipsSpecificType | null\r\n}\r\n\r\nfunction StarshipsComponent({starshipsSelect}: StarshipsSelectProps) {\r\n    return (\r\n        <div>\r\n            <div>MGLT: {starshipsSelect?.MGLT}</div>\r\n            <div>cargo_capacity: {starshipsSelect?.cargo_capacity}</div>\r\n            <div>consumables: {starshipsSelect?.consumables}</div>\r\n            <div>cost_in_credits: {starshipsSelect?.cost_in_credits}</div>\r\n            <div>created: {starshipsSelect?.created}</div>\r\n            <div>crew: {starshipsSelect?.crew}</div>\r\n            <div>edited: {starshipsSelect?.edited}</div>\r\n            <div>hyperdrive_rating: {starshipsSelect?.hyperdrive_rating}</div>\r\n            <div>length: {starshipsSelect?.length}</div>\r\n            <div>manufacturer: {starshipsSelect?.manufacturer}</div>\r\n            <div>max_atmosphering_speed: {starshipsSelect?.max_atmosphering_speed}</div>\r\n            <div>model: {starshipsSelect?.model}</div>\r\n            <div>name: {starshipsSelect?.name}</div>\r\n            <div>passengers: {starshipsSelect?.passengers}</div>\r\n            <div>films: {starshipsSelect?.films}</div>\r\n            <div>pilots: {starshipsSelect?.pilots}</div>\r\n            <div>starship_class: {starshipsSelect?.starship_class}</div>\r\n            <div>URL: {starshipsSelect?.url}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StarshipsComponent","import {starshipsApi} from \"../API/api\";\r\nimport {StarshipsSearchType, StarshipsSpecificType} from \"../Types/TypeStarships\";\r\nimport {InferActionTypes} from \"./redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst SEARCH_STARSHIPS = 'SEARCH_STARSHIPS';\r\nconst SPECIFIC_STARSHIPS = 'SPECIFIC_STARSHIPS';\r\n\r\nlet initialState = {\r\n    searchResult: [] as Array<StarshipsSearchType>,\r\n    specificResult: null as StarshipsSpecificType | null\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionTypes = InferActionTypes<typeof action>;\r\n\r\nconst starshipsReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case SEARCH_STARSHIPS:\r\n            return {\r\n                ...state,\r\n                searchResult: action.searchStarships\r\n            };\r\n\r\n        case SPECIFIC_STARSHIPS:\r\n            return {\r\n                ...state,\r\n                specificResult: action.specificStarships\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nconst action = {\r\n    searchStarships: (searchStarships: Array<StarshipsSearchType>) => ({\r\n        type: SEARCH_STARSHIPS, searchStarships\r\n    }as const),\r\n\r\n    specificStarships: (specificStarships: StarshipsSpecificType) => ({\r\n        type: SPECIFIC_STARSHIPS, specificStarships\r\n    }as const)\r\n}\r\n\r\nexport const requestSearchStarships = (starshipsName: string) => {\r\n    return async (dispatch: Dispatch) => {\r\n        let {data} = await starshipsApi.getSearchStarships(starshipsName);\r\n        dispatch(action.searchStarships(data.results))\r\n    }\r\n};\r\n\r\nexport const requestSpecificStarships = (starshipsId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        let {data} = await  starshipsApi.getSpecificStarships(starshipsId);\r\n        dispatch(action.specificStarships(data))\r\n    }\r\n};\r\n\r\nexport default starshipsReducer;","import React, {useEffect, useState} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, Select} from \"antd\";\r\nimport styles from \"./Starships.module.scss\";\r\nimport {debounce} from 'lodash';\r\nimport StarshipsComponent from \"./StarshipsComponent\";\r\nimport {requestSearchStarships, requestSpecificStarships} from \"../../redux/starships-reducer\";\r\nimport {StarshipsSearchType, StarshipsSpecificType} from \"../../Types/TypeStarships\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\nfunction Starships() {\r\n    const [starshipsName, setStarshipsName] = useState('');\r\n    const [starships, setStarships] = useState<Array<StarshipsSearchType>>([]);\r\n    const [starshipsSelect, setStarshipsSelectSelect] = useState<StarshipsSpecificType | null>(null);\r\n    const dispatch = useDispatch();\r\n    const searchResult = useSelector<AppStateType, Array<StarshipsSearchType>>(state => state.starshipsPage.searchResult);\r\n    const specificResult = useSelector<AppStateType, StarshipsSpecificType | null>(state => state.starshipsPage.specificResult);\r\n    const {Option} = Select;\r\n\r\n    useEffect(() => {\r\n        setStarships(searchResult);\r\n    }, [searchResult]);\r\n\r\n    useEffect(() => {\r\n        setStarshipsSelectSelect(specificResult);\r\n    },[specificResult]);\r\n\r\n    useEffect(() => {\r\n        dispatch(requestSearchStarships(starshipsName));\r\n    }, [starshipsName]);\r\n\r\n    const onSearchPeople = debounce((value) => {\r\n        setStarshipsName(value);\r\n    }, 1000);\r\n\r\n    const getPeople = (value: string) => {\r\n        const peopleId = Number(value?.match(/\\d+/))\r\n        dispatch(requestSpecificStarships(peopleId))\r\n    }\r\n\r\n    return (\r\n        <nav className={styles.wrapper}>\r\n            <div className={styles.wrapperContent}>\r\n                <div className={styles.backButton}>\r\n                    <Select\r\n                        showSearch\r\n                        style={{width: 470}}\r\n                        placeholder=\"Select a person\"\r\n                        optionFilterProp=\"children\"\r\n                        onSearch={onSearchPeople}\r\n                        onSelect={getPeople}\r\n                    >\r\n                        {starships?.map((starships: {url: string, name: string}) => {\r\n                            return (\r\n                                <Option key={starships.url} value={starships.url}>\r\n                                    {starships.name}\r\n                                </Option>\r\n                            )\r\n                        })}\r\n                    </Select>\r\n                    <NavLink to='/'>\r\n                        <Button>Back</Button>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={styles.specifications}>\r\n                    <StarshipsComponent starshipsSelect={starshipsSelect}/>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Starships;","import React from \"react\";\r\nimport {VechilesSpecificType} from \"../../Types/TypeVechiles\";\r\n\r\ntype VehiclesSelectProps = {\r\n        vehiclesSelect: VechilesSpecificType | null\r\n}\r\n\r\nfunction VehiclesComponent({vehiclesSelect}: VehiclesSelectProps) {\r\n    return (\r\n        <div>\r\n            <div>cargo_capacity: {vehiclesSelect?.cargo_capacity}</div>\r\n            <div>consumables: {vehiclesSelect?.consumables}</div>\r\n            <div>cost_in_credits: {vehiclesSelect?.cost_in_credits}</div>\r\n            <div>created: {vehiclesSelect?.created}</div>\r\n            <div>crew: {vehiclesSelect?.crew}</div>\r\n            <div>edited: {vehiclesSelect?.edited}</div>\r\n            <div>length: {vehiclesSelect?.length}</div>\r\n            <div>manufacturer: {vehiclesSelect?.manufacturer}</div>\r\n            <div>max_atmosphering_speed: {vehiclesSelect?.max_atmosphering_speed}</div>\r\n            <div>model: {vehiclesSelect?.model}</div>\r\n            <div>name: {vehiclesSelect?.name}</div>\r\n            <div>passengers: {vehiclesSelect?.passengers}</div>\r\n            <div>pilots: {vehiclesSelect?.pilots}</div>\r\n            <div>films: {vehiclesSelect?.films}</div>\r\n            <div>URL: {vehiclesSelect?.url}</div>\r\n            <div>vehicle_class: {vehiclesSelect?.vehicle_class}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VehiclesComponent","import {vehiclesApi} from \"../API/api\";\r\nimport {VechilesSearchType, VechilesSpecificType} from \"../Types/TypeVechiles\";\r\nimport {InferActionTypes} from \"./redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst SEARCH_VEHICLES = 'SEARCH_VEHICLES';\r\nconst SPECIFIC_VEHICLES = 'SPECIFIC_VEHICLES';\r\n\r\nlet initialState = {\r\n    searchResult: [] as Array<VechilesSearchType>,\r\n    specificResult: null as VechilesSpecificType | null\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionTypes = InferActionTypes<typeof action>;\r\n\r\nconst vehiclesReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n   switch (action.type) {\r\n       case SEARCH_VEHICLES:\r\n           return {\r\n               ...state,\r\n               searchResult: action.searchVehicles\r\n           };\r\n       case SPECIFIC_VEHICLES:\r\n           return {\r\n               ...state,\r\n               specificResult: action.specificVehicles\r\n           };\r\n\r\n       default:\r\n           return state\r\n   }\r\n};\r\n\r\nconst action = {\r\n    searchVehicles: (searchVehicles: Array<VechilesSearchType>) => ({\r\n        type: SEARCH_VEHICLES, searchVehicles\r\n    }as const),\r\n\r\n    specificVehicles: (specificVehicles: VechilesSpecificType) => ({\r\n        type: SPECIFIC_VEHICLES, specificVehicles\r\n    }as const)\r\n}\r\n\r\nexport const requestSearchVehicles = (vehiclesName: string) => {\r\n    return  async (dispatch: Dispatch) => {\r\n        let {data} = await vehiclesApi.getSearchVehicles(vehiclesName);\r\n        dispatch(action.searchVehicles(data.results))\r\n    }\r\n};\r\n\r\nexport const  requestSpecificVehicles = (vehiclesId: number) => {\r\n    return async  (dispatch: Dispatch) => {\r\n        let {data} = await vehiclesApi.getSpecificVehicles(vehiclesId);\r\n        dispatch(action.specificVehicles(data))\r\n    }\r\n}\r\n\r\nexport default vehiclesReducer","import React, {useEffect, useState} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, Select} from \"antd\";\r\nimport {debounce} from 'lodash';\r\nimport styles from \"./Vehicle.module.scss\";\r\nimport VehiclesComponent from \"./VehiclesComponent\";\r\nimport {requestSearchVehicles, requestSpecificVehicles} from \"../../redux/vehicles-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {VechilesSearchType, VechilesSpecificType} from \"../../Types/TypeVechiles\";\r\n\r\nfunction Vehicles() {\r\n    const [vehiclesName, setVehiclesName] = useState('');\r\n    const [vehicles, setVehicles] = useState<Array<VechilesSearchType>>([]);\r\n    const [vehiclesSelect, setVehiclesSelect] = useState<VechilesSpecificType | null>(null);\r\n    const dispatch = useDispatch();\r\n    const searchResult = useSelector<AppStateType, Array<VechilesSearchType>>(state => state.vehiclesPage.searchResult);\r\n    const specificResult = useSelector<AppStateType, VechilesSpecificType | null>(state => state.vehiclesPage.specificResult);\r\n    const {Option} = Select;\r\n\r\n    useEffect(() => {\r\n        setVehicles(searchResult);\r\n    }, [searchResult]);\r\n\r\n    useEffect(() => {\r\n        setVehiclesSelect(specificResult);\r\n    }, [specificResult]);\r\n\r\n    useEffect(() => {\r\n        dispatch(requestSearchVehicles(vehiclesName));\r\n    }, [vehiclesName]);\r\n\r\n    const onSearchPeople = debounce((value) => {\r\n        setVehiclesName(value);\r\n    }, 1000);\r\n\r\n    const getPeople = (value: string) => {\r\n        const vehiclesId = Number(value?.match(/\\d+/))\r\n        dispatch(requestSpecificVehicles(vehiclesId))\r\n    };\r\n\r\n    return (\r\n        <nav className={styles.wrapper}>\r\n            <div className={styles.wrapperContent}>\r\n                <div className={styles.backButton}>\r\n                    <Select\r\n                        showSearch\r\n                        style={{width: 470}}\r\n                        placeholder=\"Select a person\"\r\n                        optionFilterProp=\"children\"\r\n                        onSearch={onSearchPeople}\r\n                        onSelect={getPeople}\r\n                    >\r\n                        {vehicles?.map((vehicles: {url: string, name: string}) => {\r\n                            return (\r\n                                <Option key={vehicles.url} value={vehicles.url}>\r\n                                    {vehicles.name}\r\n                                </Option>\r\n                            )\r\n                        })}\r\n                    </Select>\r\n                    <NavLink to='/'>\r\n                        <Button>Back</Button>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={styles.specifications}>\r\n                    <VehiclesComponent vehiclesSelect={vehiclesSelect}/>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Vehicles","import React from \"react\";\r\nimport { SpeciesSpecificType } from \"../../Types/TypeSpecies\";\r\n\r\ntype SpecificSelectProps = {\r\n        speciesSelect: SpeciesSpecificType | null\r\n}\r\n\r\nfunction SpeciesComponent({speciesSelect}: SpecificSelectProps) {\r\n    return (\r\n        <div>\r\n            <div>average_height: {speciesSelect?.average_height}</div>\r\n            <div>average_lifespan: {speciesSelect?.average_lifespan}</div>\r\n            <div>classification: {speciesSelect?.classification}</div>\r\n            <div>created: {speciesSelect?.created}</div>\r\n            <div>designation: {speciesSelect?.designation}</div>\r\n            <div>edited: {speciesSelect?.edited}</div>\r\n            <div>eye_colors: {speciesSelect?.eye_colors}</div>\r\n            <div>hair_colors: {speciesSelect?.hair_colors}</div>\r\n            <div>homeworld: {speciesSelect?.homeworld}</div>\r\n            <div>language: {speciesSelect?.language}</div>\r\n            <div>name: {speciesSelect?.name}</div>\r\n            <div>people: {speciesSelect?.people}</div>\r\n            <div>films: {speciesSelect?.films}</div>\r\n            <div>skin_colors: {speciesSelect?.skin_colors}</div>\r\n            <div>URL: {speciesSelect?.url}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpeciesComponent","import {speciesApi} from \"../API/api\";\r\nimport {SpeciesSearchType, SpeciesSpecificType} from \"../Types/TypeSpecies\";\r\nimport {InferActionTypes} from \"./redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst SEARCH_SPECIES = 'SEARCH_SPECIES';\r\nconst SPECIFIC_SPECIES = 'SPECIFIC_SPECIES';\r\n\r\nlet initialState = {\r\n    searchResult: [] as Array<SpeciesSearchType>,\r\n    specificResult: null as SpeciesSpecificType | null\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionTypes = InferActionTypes<typeof action>;\r\n\r\nconst speciesReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case SEARCH_SPECIES:\r\n            return {\r\n                ...state,\r\n                searchResult: action.searchSpecies\r\n            };\r\n        case SPECIFIC_SPECIES:\r\n            return {\r\n                ...state,\r\n                specificResult: action.specificSpecies\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n\r\nconst action = {\r\n    searchSpecies: (searchSpecies: Array<SpeciesSearchType>) => ({\r\n        type: SEARCH_SPECIES, searchSpecies\r\n    }as const),\r\n\r\n    specificSpecies: (specificSpecies: SpeciesSpecificType) => ({\r\n        type:SPECIFIC_SPECIES, specificSpecies\r\n    }as const)\r\n}\r\n\r\nexport const requestSearchSpecies = (speciesName: string) => {\r\n    return async (dispatch: Dispatch) => {\r\n        let {data} = await speciesApi.getSearchSpecies(speciesName);\r\n        dispatch(action.searchSpecies(data.results))\r\n    }\r\n};\r\n\r\nexport const requestSpecificSpecies = (speciesId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        let {data} = await  speciesApi.getSpecificSpecies(speciesId);\r\n        dispatch(action.specificSpecies(data))\r\n    }\r\n};\r\n\r\nexport default speciesReducer;","import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./Species.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, Select} from \"antd\";\r\nimport {debounce} from 'lodash';\r\nimport SpeciesComponent from \"./SpeciesComponent\";\r\nimport {requestSearchSpecies, requestSpecificSpecies} from \"../../redux/species-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {SpeciesSearchType, SpeciesSpecificType} from \"../../Types/TypeSpecies\";\r\n\r\nfunction Species() {\r\n    const [speciesName, setSpeciesName] = useState('');\r\n    const [species, setSpecies] = useState<Array<SpeciesSearchType>>([]);\r\n    const [speciesSelect, setSpeciesSelect] = useState<SpeciesSpecificType | null>(null);\r\n    const dispatch = useDispatch();\r\n    const searchResult = useSelector<AppStateType, Array<SpeciesSearchType>>(state => state.speciesPage.searchResult);\r\n    const specificResult = useSelector<AppStateType, SpeciesSpecificType | null>(state => state.speciesPage.specificResult);\r\n    const {Option} = Select;\r\n\r\n    useEffect(() => {\r\n        setSpecies(searchResult);\r\n    }, [searchResult]);\r\n\r\n    useEffect(() => {\r\n        setSpeciesSelect(specificResult);\r\n    }, [specificResult]);\r\n\r\n    useEffect(() => {\r\n        dispatch(requestSearchSpecies(speciesName));\r\n    }, [speciesName]);\r\n\r\n    const onSearchPeople = debounce((value) => {\r\n        setSpeciesName(value);\r\n    }, 1000);\r\n\r\n    const getPeople = (value: string) => {\r\n        const speciesId = Number(value?.match(/\\d+/))\r\n        dispatch(requestSpecificSpecies(speciesId))\r\n    };\r\n\r\n    return (\r\n        <nav className={styles.wrapper}>\r\n            <div className={styles.wrapperContent}>\r\n                <div className={styles.backButton}>\r\n                    <Select\r\n                        showSearch\r\n                        style={{width: 470}}\r\n                        placeholder=\"Select a person\"\r\n                        optionFilterProp=\"children\"\r\n                        onSearch={onSearchPeople}\r\n                        onSelect={getPeople}\r\n                    >\r\n                        {species?.map((species: {url: string, name: string}) => {\r\n                            return  (\r\n                                <Option key={species.url} value={species.url}>\r\n                                    {species.name}\r\n                                </Option>\r\n                            )\r\n                        })}\r\n                    </Select>\r\n                    <NavLink to='/'>\r\n                        <Button>Back</Button>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={styles.specifications}>\r\n                    <SpeciesComponent  speciesSelect={speciesSelect} />\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Species;","import {planetsApi} from \"../API/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {InferActionTypes} from \"./redux-store\";\r\nimport {PlanetsSearchType, PlanetsSpecificType} from \"../Types/TypePlanet\";\r\n\r\nconst SEARCH_PLANETS = 'SEARCH_PLANETS';\r\nconst SPECIFIC_PLANETS = 'SPECIFIC_PLANETS';\r\n\r\nlet initialState = {\r\n    searchResult: [] as Array<PlanetsSearchType>,\r\n    specificResult: null as PlanetsSpecificType | null\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionTypes = InferActionTypes<typeof action>;\r\n\r\nconst planetsReducer = (state:InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case SEARCH_PLANETS:\r\n            return {\r\n                ...state,\r\n                searchResult: action.searchPlanets\r\n            };\r\n\r\n        case SPECIFIC_PLANETS:\r\n            return {\r\n                ...state,\r\n                specificResult: action.specificPlanets\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nconst action = {\r\n    searchPlanets: (searchPlanets: Array<PlanetsSearchType>) => ({\r\n        type: SEARCH_PLANETS, searchPlanets\r\n    } as const),\r\n\r\n    specificPlanets: (specificPlanets: PlanetsSpecificType) => ({\r\n        type:SPECIFIC_PLANETS, specificPlanets\r\n    } as const)\r\n}\r\n\r\nexport const requestSearchPlanets = (planetsName: string) => {\r\n    return async (dispatch: Dispatch) => {\r\n        let {data} = await planetsApi.getSearchPlanets(planetsName);\r\n        dispatch(action.searchPlanets(data.results))\r\n    }\r\n};\r\n\r\nexport const requestSpecificPlanets = (planetsId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        let {data} = await planetsApi.getSpecificPlanets(planetsId);\r\n        dispatch(action.specificPlanets(data))\r\n    }\r\n};\r\n\r\nexport default planetsReducer;","import React from \"react\";\r\nimport { PlanetsSpecificType } from \"../../Types/TypePlanet\";\r\n\r\ntype PlanetsSelectProps = {\r\n        planetsSelect: PlanetsSpecificType | null\r\n}\r\n\r\nfunction PlanetsComponent({planetsSelect}: PlanetsSelectProps) {\r\n    return (\r\n        <div>\r\n            <div>climate: {planetsSelect?.climate}</div>\r\n            <div>created: {planetsSelect?.created}</div>\r\n            <div>diameter: {planetsSelect?.diameter}</div>\r\n            <div>edited: {planetsSelect?.edited}</div>\r\n            <div>films: {planetsSelect?.films}</div>\r\n            <div>gravity: {planetsSelect?.gravity}</div>\r\n            <div>name: {planetsSelect?.name}</div>\r\n            <div>orbital_period: {planetsSelect?.orbital_period}</div>\r\n            <div>population: {planetsSelect?.population}</div>\r\n            <div>residents: {planetsSelect?.residents}</div>\r\n            <div>rotation_period: {planetsSelect?.rotation_period}</div>\r\n            <div>surface_water: {planetsSelect?.surface_water}</div>\r\n            <div>terrain: {planetsSelect?.terrain}</div>\r\n            <div>URL: {planetsSelect?.url}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlanetsComponent","import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./Planets.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, Select} from \"antd\";\r\nimport {debounce} from 'lodash';\r\nimport {requestSearchPlanets, requestSpecificPlanets} from \"../../redux/planets-reducer\";\r\nimport PlanetsComponent from \"./PlanetsComponent\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {PlanetsSearchType, PlanetsSpecificType} from \"../../Types/TypePlanet\";\r\n\r\nfunction Planets() {\r\n    const [planetsName, setPlanetsName] = useState('');\r\n    const [planets, setPlanets] = useState<Array<PlanetsSearchType>>([]);\r\n    const [planetsSelect, setPlanetsSelect] = useState<PlanetsSpecificType | null>(null);\r\n    const dispatch = useDispatch();\r\n    const searchResult = useSelector<AppStateType, Array<PlanetsSearchType>>(state  => state.planetsPage.searchResult);\r\n    const specificResult = useSelector<AppStateType, PlanetsSpecificType | null>(state => state.planetsPage.specificResult);\r\n    const {Option} = Select;\r\n\r\n    useEffect(() => {\r\n        setPlanets(searchResult);\r\n    }, [searchResult]);\r\n\r\n    useEffect(() => {\r\n        setPlanetsSelect(specificResult);\r\n    }, [specificResult]);\r\n\r\n    useEffect(() => {\r\n        dispatch(requestSearchPlanets(planetsName));\r\n    }, [planetsName]);\r\n\r\n    const onSearchPeople = debounce((value) => {\r\n        setPlanetsName(value);\r\n    }, 1000);\r\n\r\n    const getPeople = (value: string) => {\r\n        const planetsId = Number(value?.match(/\\d+/))\r\n        dispatch(requestSpecificPlanets(planetsId))\r\n    };\r\n\r\n    return (\r\n        <nav className={styles.wrapper}>\r\n            <div className={styles.wrapperContent}>\r\n                <div className={styles.backButton}>\r\n                    <Select\r\n                        showSearch\r\n                        style={{width: 470}}\r\n                        placeholder=\"Select a person\"\r\n                        optionFilterProp=\"children\"\r\n                        onSearch={onSearchPeople}\r\n                        onSelect={getPeople}\r\n                    >\r\n                        {planets?.map((planets: {url: string, name: string}) => {\r\n                            return  (\r\n                                <Option key={planets.url} value={planets.url}>\r\n                                    {planets.name}\r\n                                </Option>\r\n                            )\r\n                        })}\r\n                    </Select>\r\n                    <NavLink to='/'>\r\n                        <Button>Back</Button>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={styles.specifications}>\r\n                    <PlanetsComponent planetsSelect={planetsSelect} />\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Planets;","import React from 'react';\r\nimport People from \"./components/people/People\";\r\nimport MainMenu from \"./components/mainMenu/MainMenu\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport Films from \"./components/films/Films\";\r\nimport Starships from \"./components/starships/Starships\";\r\nimport Vehicles from \"./components/vehicles/Vehicles\";\r\nimport Species from \"./components/species/Species\";\r\nimport Planets from \"./components/planets/Planets\";\r\nimport styles from './App.module.scss'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <MainMenu/>\r\n            <Switch>\r\n                <Route exact path = '/' render={ () => <div/>}/>\r\n                <Route exact path = '/People' render={ () => <People/>}/>\r\n                <Route exact path = '/Films' render={() => <Films/>}/>\r\n                <Route exact path = '/Starships' render={() => <Starships/>}/>\r\n                <Route exact path = '/Vehicles' render={() => <Vehicles/>}/>\r\n                <Route exact path = '/Species' render={() => <Species/>}/>\r\n                <Route exact path = '/Planets' render={() => <Planets/>}/>\r\n                <Route render={() => <div className={styles.notFound}>404 NOT FOUND</div>}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport peopleReducer from \"./people-reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport filmsReducer from \"./films-reducer\";\r\nimport starshipsReducer from \"./starships-reducer\"\r\nimport vehiclesReducer from \"./vehicles-reducer\";\r\nimport speciesReducer from \"./species-reducer\";\r\nimport planetsReducer from \"./planets-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    peoplePage: peopleReducer,\r\n    filmsPage: filmsReducer,\r\n    starshipsPage: starshipsReducer,\r\n    vehiclesPage: vehiclesReducer,\r\n    speciesPage: speciesReducer,\r\n    planetsPage: planetsReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppStateType = ReturnType<typeof reducers>\r\nexport type InferActionTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/redux-store\";\r\nimport {Provider} from \"react-redux\";\r\nimport \"antd/dist/antd.css\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n)\r\n;\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"People_wrapper__2y1BQ\",\"wrapperContent\":\"People_wrapperContent__2cnAX\",\"backgroundImage\":\"People_backgroundImage__2_6ax\",\"specifications\":\"People_specifications__35a1T\",\"backButton\":\"People_backButton__105W1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Films_wrapper__mCl4a\",\"wrapperContent\":\"Films_wrapperContent__2O4X0\",\"backgroundImage\":\"Films_backgroundImage__3tWwl\",\"specifications\":\"Films_specifications__1T5fT\",\"backButton\":\"Films_backButton__QYun3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Starships_wrapper__1KCae\",\"wrapperContent\":\"Starships_wrapperContent__u66lo\",\"backgroundImage\":\"Starships_backgroundImage__3ox0V\",\"specifications\":\"Starships_specifications__ga3q0\",\"backButton\":\"Starships_backButton__3q96v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Vehicle_wrapper__2dlaI\",\"wrapperContent\":\"Vehicle_wrapperContent__32Fit\",\"backgroundImage\":\"Vehicle_backgroundImage__1ofid\",\"specifications\":\"Vehicle_specifications__3TWRY\",\"backButton\":\"Vehicle_backButton__aMLbQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Species_wrapper__1KT79\",\"wrapperContent\":\"Species_wrapperContent__1wfMb\",\"backgroundImage\":\"Species_backgroundImage__2ozOh\",\"specifications\":\"Species_specifications__2FD5k\",\"backButton\":\"Species_backButton__5BQzH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Planets_wrapper__2mf_E\",\"wrapperContent\":\"Planets_wrapperContent__37lH7\",\"backgroundImage\":\"Planets_backgroundImage__RlIHD\",\"specifications\":\"Planets_specifications__3JLvU\",\"backButton\":\"Planets_backButton__2XhDk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2gS6E\",\"notFound\":\"App_notFound__izoS1\"};"],"sourceRoot":""}